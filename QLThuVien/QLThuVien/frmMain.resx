<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="menuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAQAAAAEACAYAAABccqhmAAAABGdBTUEAALGPC/xhBQAAFtZJREFUeF7t
        nXmUV8WVx+evEJdEx33cjSTxxDXqmDg6UU92khiTGHWcODGJRueMJ5NMolH2rVlUFpGlBUF2RBrcANEW
        3NiFZpVVpNn3hqZpmm6675133ysj4rXp5fd7VfXq+z3nczjav+W+enW/v/deVd36J3rsCwwACBMYAAAB
        AwMAIGBgAAAEDAwAgICBAQAQMDAAAAIGBgBAwMAAAAgYGAAAAQMDACBgYAAABAwMAICAgQEAEDAwAAAC
        BgYAQMDAAAAIGBgAAAEDAwAgYGAAAAQMDACAgIEBABAwMAAAAgYGAEDAwAAACBgYAAABAwMAIGBgAAAE
        DAwAgICBAQAQMDAAAAIGBgBAwMAAAAgYGAAAAQMDACBgYABZocMpzNs/YBpzl/53ABRgAFlh/L0cq6w0
        NgP1NQAcBQwgC7Q9gWnjvMQAItGM7vrrADgKGEAWGHCjSX2jQxVMvS7VXwvAEcAAfKf1F5mWTTSZ/4lo
        2aTob8fp7wHAAAPwneiXnutqTdofIapjGtZKfw8ABhiA78x9xmT8Z0VblzC1OUF/HwARMACf6XZ+dL9f
        btJdF738J/29AETAAHxmWhuT5vWoYidT13P094PggQH4SqfTmPesN1lev2j2AP0zQPDAAHxlwh9MejdA
        1ZVMT12jfw4IGhiAj8jEn80LTXY3TLRqGoYFwWeAAfjI0B+btG6caPht+ueBYIEB+MjKKSalGyfatZqp
        /Un6Z4IggQH4Rt+rokyuMyndeFFxJ/1zQZDAAHxj/lCTyk1UVTlTz5b6Z4PggAH4RPeL4oU+zRWVjNE/
        HwQHDMAnpheYFG6mamuYBt6ofwcIChiAL3Q+g3nfJpPBzReVzkpWEmrfBYIBBuALEx8wqZs70fP36N8F
        ggEG4ANtT2TaUmLSNofauxHlwwIHBuADQ1uZjM296K0e+neCIIAB+MDq10265kGH9jM9+Q39e0HmgQG4
        zlPXmEzNn2jRWP27QeaBAbhOyRiTpnlU3WGmwpv07weZBgbgMtGluSzlTUNUOhvDggECA3CZmf1MeqYj
        GvcbPQ6QWWAArlJwHvOBnSY1U5LsKtTxVD0ekElgAK4y9VGTlelKphur8YBMAgNwkXZfZtq11qRkyqra
        x/TEJXpcIHPAAFxkzF0mG+2ISkbjgWAgwABcpHSOSUVLiocFb9FjA5kCBuAahTdHP8FNr/iTK9H6mbgK
        CAAYgGssf9GkoH3R6Dv0GEFmgAG4RJ8rmWsOmvRzQHvWMbU/WY8VZAIYgEukPPHnmCJieqO9HivIBDAA
        V+hyFvP+bSbzHNKB3XEtQjVm4D0wAFeY+KDJOPdEcwujGFt8NmbgPTAAF2hzfKO3+kpVtdVMA/5Njx14
        DQzABYb8wGSau8KwYDaBAbjAiskmzdwWVgtmDxiAbXpfzny42qSY48JqwcwBA7CNa0N/xxC93k4/DuAl
        MACbdD2buSLlNf/NVflWpm7n68cDvAMGYJPJfzNZ5Zfo3d768QDvgAHYov3JzDtXmZTyTIermHpfoR8X
        8AoYgC3G3m2yyU/Rqqn6cQGvgAHYQMbTS2eZVPJUsk5g+M/14wPeAAOwwaDvmCzyXDtWJuXLtGMEXgAD
        sMGySSaD/Be9+n/6MQIvgAGkjWz2cfiQSZ8MqHwLU5ez9WMFzgMDSBvPJv40RPTOk/qxAueBAaSJbPZR
        scOkTYYUXdFQz5b6MQOngQGkyZRHTMZkT7S0SD9m4DQwgLSQp+U7Vph0yaBkWHAQdhj2DRhAWoy4zWRK
        dkUb5jC1OU4/fuAkMIC0WFNs0iTDkquA8ffqxw+cBAaQBlLu24HNPlJRXDPgNL0dgHPAANJg3mCTHWGI
        ZnTX2wE4Bwwg38ia/8o9JjUCkawWxLCgF8AA8s0rfzZZEZYwLOgHMIB80u5LzNuWmZQITFQXb3Sqtgtw
        BhhAPnnu1vjJeKiKhwVRStxpYAD5Qjr+mjdMKoQrGnOn3j7ACWAA+aLv1SYFwhbtXMXU/iS9jYB1YAD5
        Ym5YQ3/1iaY+qrcRsA4MIB90Op25ap/p/pC0BRWcq7cVsAoMIB+88hfT8y2qtjpKvPLkXwdEC4brbQWs
        AgPINa2Pi2vlWZVs3lF4C1PPi5mG/YT5gAObj9TWYIdhB4EB5JphraKfO4vz/uVyu/+3Px3TwBuYD1WY
        F9gTfTjj03EB68AAcs2KV013tyOaW6jH9fYT5hUWJasFR/xCjw9YAQaQS3pdxlxTaXq7BdXVxisP1djk
        weTeDeaF9kTbljG1PVGPEaQODCCXvNfHdHM7OuZuPc/fY15pVzTpv/X4QOrAAHJF5zOsD/3Rsz/SY/sY
        mZ340bvm1RZVsZOpwyl6jCBVYAC5wvJOv7Tp/YZdWj99XfxE3rbkakmND6QKDCAXRL+svGut6dp2REX3
        6bFpzH3GvMuipJR436v0+EBqwABywXM/izLQ4qq/vRuZOp6qx6bR7YLoMny7ebM90eppKCJqGRhALrA9
        9PdmFz2u+pj8V/Nui5KaAaNu1+MDqQADaC69LmWutjj0d6iC6fGv6rHVR7uT4iE52yLZYRirBa0BA2gu
        M7qbrmxHtHicHldDGPpj8yl2JQ9Q1fhA3oEBNIfovpvL1ptubEFyCT3wRj22hvLBy+bDLCpeLXieHh/I
        KzCA5jD+XtOD7SgpudXMh2hyC+PCOoH3n9PjA3kFBtBUJPE2zTfd144aNfRXHy6sE5BhweZezYBGAwNo
        KoO/Z3quJe3fztTlLD22xtL5TOZ9m80H2xOte5up7Ql6jCAvwACayvKXTLe1I5ozSI+rqRTdH32o/QrG
        NO4ePT6QF2AATeGJrzPXHDRd1oLkcrnftXpsTUXWCWyYa77AovZ8xNT+ZD1GkHNgAE1helfTW+2I1hbr
        cTWXgf/uxjqBpkxsAk0CBtBYOpwST721JimqMfw2PbZcMH+o+SKLqj7A1ONiPT6QU2AAjWX8f5leakky
        c67N8XpsuaD7hcwHdpkvsyda/LweH8gpMIDGEK+nf8d0UTuSOfxqbLlkyiPm2yyqtjoeaVHjAzkDBtAY
        +l0XX4JbU2UZU9dz9NhyiTyE27HCfKk9JTUOMCyYT2AAjWHBcNM17YjeH6bHlQ9G3W7X7IxkeFKND+QE
        GEBDKTiPue6w6ZYWJHX1054pt/p18+UWtX8bU8fT9PhAs4EBNJQZ3UyPtCMZo6c2KV8O970qnnNgWzJV
        WY0PNBsYQEPo8M/Wd9ehCX/QY8s3s/qbCCyqpoqp9+V6fKBZwAAagkyTtal9W2ITUmPLN3H5sB0mEHui
        5S/q8YFmAQNoCKWzTTe0I3qzsx5XWrgwLFh3mGnwd/X4QJOBARyL/tfbnR4rl7/dztdjSwup4b/T8oan
        keL6B/mcBBUgMIBjMW+I6X525My22mP+w0RkVzTuN3p8oEnAAOqjy78wHywzXc+CZK+/p6/TY0sbB2ZB
        xopXC6KIaK6AAdSH5dLZ9OFbzS/5lUsG3GB3LoQRvfaYHh9oNDCAz6N1C6bo18aaZNXfmLv02KwRtcnC
        kSZAi6rczVRg+blIRoABfB5R8lnVrrVuXupKMZSqchOkPdHs/np8oFHAAD6P0lmmq9kRTWujx+UClvdC
        iCU1A3pfoccHGgwMQEPudW0O/Umd/J5N2O0nLbqcxbx3gwnWnmjJBD0+0GBgABrzBpsuZkdUMkaPyyUs
        b4ceSzZGQc2AZgEDOJqu59qtiCOduvAmPTaXkIVJWxaZoI1k+fDnjRLU1TKXb0l2UtqxknlLCfPGeUkp
        8DXFTKteY1o5Ja62HE/7XTaRaWn0C794PNOicYkpyuYhc59hmtkvWSA0vSvToO/o8YEGAQM4mlf+bHqs
        HZEkhUtDf/UhMxQHXJ/U7+t+UbxuIP5/8t89DT2+8snfZFmvrGlo9+VkRp/MLdA+F6QGDOBI2p7ItHWJ
        SUU7ohd+p8cGQB6AARyJ7d1yyzczdTpDjw2APAADOJIVr5pMtCOa+ZQeFwB5AgbwMX2uTB5i2VJNJVPf
        b+qxAZAnYAAfY3lDDFo1VY8LgDwCAxBkM4yqfSYVLUhW/T37Iz02APIIDECY/LDJRDuiLYv1uADIMzCA
        dl9i3rbMpKId0fjf6rEBkGdgAEN+YNLQkspK7RX8BMETtgHITLTlL5lMtCN6r48eGwApELYB9Gxpt8KN
        7PbT50o9NgBSIGwDeKuHyUQ7orVvRnG0+GxcAKREuAYgD/8q95hUtCMa+596bACkRLgG8PKfTBpa0t6N
        ePgHrBOmAbRuwbx9uclEO0JlW+ACYRrAsJ9EGWh373t68X/02EDukfoKbU9IiqzKVVfHU5k6nRZxerL6
        UugsnPlpel3K9NS1ybbsQ37INPw2/fM9JkwDWFZk0tCe6L2+2SmIISXUpZaCFPzoenZS/EOKgEgxEKFn
        S1MgJPr38a8xPfmNZLffPlcx9b06SbJ+/5rQ/3qmwpuZRkTJVnR/XHqMijslFYBmRm02e2Bcso3mPxuv
        36D3hyWVgmQHpQUjEhY/n1QWWjmZ6cMZzBvmJpO9ykrjkuJ8qIK5tjqpUtRA0balTJMe1I/fY8IzgKgj
        SkVZF0SzBySJI8gvTsF58W5EVHBuXH474ZLkl0hWCvb/NtOgm6Jfo+9HVzE/TZJk5K+YRv2aabRwR/Jg
        8YXfR1cYDyXJ83q7ZHPReUOYFo1NSm0tfzle+hwnyMqpTKunMa0tjpNFSnSx7AAkrEuIy3YdAUvF5M0L
        IhZGlETJtZR55+r4uUa8jbqsq5Akk3YWaioNB5PEozrTAo6rqpxpyQtRW7diapfN3YjCM4DijubsOqL9
        2yK2JyMSB/dG/5Yl/x4yyfNxAh0+lMxZsHzrknlJTcYti+LScLERa30oQ4RlADL050A5a8hBRSYc35bJ
        LUhAtQrDMoDRd5qzDUGRDuxi+iC6HRp1e/KQUOszGScsA9gwx5x5KGTFzzqK/pg8rNT6SUCEYwCFNzfq
        qS+UIclzk/3bkkt8GYHwpex6CoRjAIvGmt4ABSPZYk02HJFREhlp0fpF4IRhAD0utlvyC0pPUl5NNleR
        p/g9LtL7A/gHYRjAa61N74Ayqz0fMb3bK5lYhEv8BpN9A5BtqCzP+4fypEMVTCWjkok6Ms1XO/+gXrJv
        ADLvH8qOJOnXz2KacB9Th1P0cw4aTMYNoEU83RXyX7R5IdO01ky9LlPOM2gq2TaAXpdi6qzPkqf4stBH
        1kDgKX5eyLYBzOxnehLkjWqqmD56N9klWVYXaucV5IzsGkCnM5gPlpleBTmtw9XMW0qYpjySTNTRzifI
        C9k1ANslv6Bja/typukFTP2u1c8hyDvZNIA2x8dLOiEHVX0gKeIhRT9kiFY7fyA1smkAg26K13VDjkju
        60tnMxXdl5Tj0s4ZsEI2DaBktOl5kDVJ8RIprDH1UQzdOUz2DKDbBUkFHciOdq9lerc309PfwpRcD8ie
        AbzV0/REKDXJJb6M10utQkzJ9YpsGUCb45KilFD+FV1lxVNyJz4QJf3J+vkAzpMtA+h+IR7+5VNSUGXT
        AozXZ4hsGUB07wnlQbs/TJbaSt1+2QNAa/usIaXYZ3RLyrFrf88I2TGAHl9JymlDuZGM18teAjJeH8p9
        vcxLGH5rXEWIq5MHybT6df21GSE7BjC9ID5hUDMkS23XFDON/20ymUpr5ywiuxUVd2YuW28a4gjVHY6X
        lKvvywDZMIDOZzLv22TOGNQoyWrJeLz+70w9v6q3bxaRPQKlHPiKycmmK/UoXoqc0dWI2TCAiQ+YUwU1
        WGWl0X19n2SpbZuAauLLfoRvPxGXEGuM4qsi7fM8x38DEGfeNN+cJqhexevrh4U3Xi+/9rJn4trpHO9P
        2BTtWpPJtQv+G8CzPzRnCFIl9/Wy+ee4e8La/UaOVWYjSk2IHN0expWGte/yGP8NYE2xOT3QkYq3s57W
        NtlhWGu3rNL9QqaXHmKSLcFra0xr5EjlW5k6n6V/r6f4bQDR/RxKfh2h/VEHnVPINPDGsJbaypqDwd9L
        FoFV7jaNkR/RjO56DJ7itwHMGWROS8A6WMa0eBzT8J+HNw+/+wVMUx5m2rokmaWYhir3MPVsqcfjIf4a
        QMF54Zb8knn4H05nGn8vU6fT9fbJKnJlM7QV05LxzIf2mwZJV/EEKS02D/HXAN5ob05HOKJty6Lj7sjU
        +wq9TUJg7N2mNSyqOjLgp67R4/MMPw0g+tXj3evM2ci4KqNL/HmDk/t6LLWNKwrxrrWmceyJlr8YxeP/
        ugg/DcCFX4F8Ssbrl7/ENOYu1M3TeP4e+w9/a2uSB49afB7hnwG0/iLTunfMWciQDlcxrZ/JVHQ/U8G5
        +rGDBJn8JcN8lhXXOfR8zYR/BtD3m/bdP4eirUuZ3uySTFHVjhfoDG2V+3H+JiieYajF5wn+GcDcZ0zT
        e6yq8vg4qP/1uMRvMtH9tyzksSza/kEy1ViN0X38MoCOp/1jnbZ3kvH6lZPDm5KbT57+VnzrZFv08v/q
        8XmAXwbwyl9Mk3siGS5a9zbThN8zdT1HPybQPBaONI1tUfs2MXXxc4qwPwYgBT93rjYt7rZowxymKX9H
        3bw0ePzrzIfKTcvbE73ZVY/PcfwxgOG3Rq3saMFPiUvm4b/Xh6n35bjET5u3HzcnwqIO7mV64hI9Pofx
        xABaJGu5XZOsDps/lGnYT5WYQWp0PTcy4G3mpNgTLRihx+cwfhhA36uZa6tNM1vWvs1MK6cyjb6TqcMp
        erwgfaY8bE6QRclcjoE36PE5ih8GsGC4aWE7ktVmEkP8S9/5TD1GYJd4ivAac8bsKa4i7NHkIPcNoMdF
        yUaTaSu64qCP3mMq+mMy80yLDbjFC/dGGWh5klhdLdOI2/T4HMR9A0j7Ac+utUzFnZKNIbR4gLvIL+9G
        +/Uh4yrCnkzwctsA2p/EfHCPadY8Su7r5RJfFnfIWgMtFuAHg79r54rxKMVXjlp8juG2Abz0UF4v6Whp
        EdPIX4VXVCPrLJtkzrBF7VnvRb9y1wBaH8cspZ5yKfllkPLOrz2WueKO4Aj6XhVvbWZbcfEWLT6HcNcA
        nvuZacYcSDbBkGKZQ/xfvw0ayKynzcm3qAO7mHpcrMfnCI4aQIt44UyzJDPzFo5M9nXzeLUWaCLdzo/6
        wHbTGeyJZg/U43MENw3g8a81ba23bOQolXRG/hL39YBp8t9Mx7Ao2WXZ4S3G3TSANzqY1muAJOmlWOak
        B5nayy99IPvXg2MjNRQdWEBGSyY4O7rkngG0PYG5ogGXbns3mvv67+ufA4Aw+g7TYSxK6gcW3qLHZxn3
        DOCF35lW0xVXYx17N1PnM/T3A3A062ea3mNP8axSB6cIu2cAW5eaJjOiuqRY5mutk33ftPcAUB+FN8f9
        yKqIkgVkWnwWccsARv4ynksdnywZupvRjanXZdHfcF8PmsnSIpOJ9kQ7Vjg3LOiUAfCm+UwlY5KhO0zJ
        Bbmk9xVxMdZ4MpgsLY+p+eQHR/6/1BeU7cYqdsTPmOINSKKkjSekbVmU/Cu7LssV6ZripMajzCYtGZ3U
        hZBCr3MGxXMQ6J1eTNMLmF79K9OoXyczTmX/RsdKw7l3CwAASA0YAAABAwMAIGBgAAAEDAwAgICBAQAQ
        MDAAAAIGBgBAwMAAAAgYGAAAAQMDACBgYAAABAwMAICAgQEAEDAwAAACBgYAQMDAAAAIGBgAAAEDAwAg
        YGAAAAQMDACAgIEBABAwMAAAAgYGAEDAwAAACBgYAAABAwMAIGBgAAAEDAwAgICBAQAQMDAAAAIGBgBA
        wMAAAAgYGAAAAQMDACBYvsD/Dy35aBgHHtfnAAAAAElFTkSuQmCC
</value>
  </data>
</root>